// Code generated by go-ethereum/accounts/abi/bind. DO NOT EDIT.
// 这个文件是由 go-ethereum 的 abigen 工具自动生成的，用于与 RewardRegistry 合约交互
// 实际使用中，应该运行 abigen 命令来生成该文件
// 这里为了示例直接提供一个模板

package blockchain

import (
	"math/big"
	"strings"

	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

// RewardRegistryABI 是 RewardRegistry 合约的 ABI
const RewardRegistryABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"}],\"name\":\"ExchangeFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"familyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"}],\"name\":\"RewardCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"RewardExchanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"RewardUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_familyId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_imageURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stock\",\"type\":\"uint256\"}],\"name\":\"createReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardId\",\"type\":\"uint256\"}],\"name\":\"exchangeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exchanges\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"familyRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"fulfillExchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_child\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getChildExchangeId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_child\",\"type\":\"address\"}],\"name\":\"getChildExchangeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_familyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFamilyRewardId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_familyId\",\"type\":\"uint256\"}],\"name\":\"getFamilyRewardCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardId\",\"type\":\"uint256\"}],\"name\":\"getReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"familyId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stock\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_imageURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stock\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"updateReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// RewardRegistry is an auto generated Go binding around an Ethereum contract.
type RewardRegistry struct {
	RewardRegistryCaller     // Read-only binding to the contract
	RewardRegistryTransactor // Write-only binding to the contract
	RewardRegistryFilterer   // Log filterer for contract events
}

// RewardRegistryCaller is an auto generated read-only Go binding around an Ethereum contract.
type RewardRegistryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RewardRegistryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RewardRegistryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RewardRegistryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RewardRegistryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NewRewardRegistry creates a new instance of RewardRegistry, bound to a specific deployed contract.
func NewRewardRegistry(address common.Address, backend bind.ContractBackend) (*RewardRegistry, error) {
	contract, err := bindRewardRegistry(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &RewardRegistry{
		RewardRegistryCaller:     RewardRegistryCaller{contract: contract},
		RewardRegistryTransactor: RewardRegistryTransactor{contract: contract},
		RewardRegistryFilterer:   RewardRegistryFilterer{contract: contract},
	}, nil
}

// bindRewardRegistry binds a generic wrapper to an already deployed contract.
func bindRewardRegistry(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RewardRegistryABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// CreateReward 创建新的实物奖励
func (r *RewardRegistryTransactor) CreateReward(opts *bind.TransactOpts, familyId *big.Int, name string, description string, imageURI string, tokenPrice *big.Int, stock *big.Int) (*types.Transaction, error) {
	return r.contract.Transact(opts, "createReward", familyId, name, description, imageURI, tokenPrice, stock)
}

// UpdateReward 更新奖品信息
func (r *RewardRegistryTransactor) UpdateReward(opts *bind.TransactOpts, rewardId *big.Int, name string, description string, imageURI string, tokenPrice *big.Int, stock *big.Int, active bool) (*types.Transaction, error) {
	return r.contract.Transact(opts, "updateReward", rewardId, name, description, imageURI, tokenPrice, stock, active)
}

// ExchangeReward 兑换奖品
func (r *RewardRegistryTransactor) ExchangeReward(opts *bind.TransactOpts, rewardId *big.Int) (*types.Transaction, error) {
	return r.contract.Transact(opts, "exchangeReward", rewardId)
}

// FulfillExchange 标记兑换记录为已发放
func (r *RewardRegistryTransactor) FulfillExchange(opts *bind.TransactOpts, exchangeId *big.Int) (*types.Transaction, error) {
	return r.contract.Transact(opts, "fulfillExchange", exchangeId)
}

// GetReward 获取奖品信息
func (r *RewardRegistryCaller) GetReward(opts *bind.CallOpts, rewardId *big.Int) (struct {
	Id          *big.Int
	Creator     common.Address
	FamilyId    *big.Int
	Name        string
	Description string
	ImageURI    string
	TokenPrice  *big.Int
	Stock       *big.Int
	Active      bool
}, error) {
	var out struct {
		Id          *big.Int
		Creator     common.Address
		FamilyId    *big.Int
		Name        string
		Description string
		ImageURI    string
		TokenPrice  *big.Int
		Stock       *big.Int
		Active      bool
	}
	err := r.contract.Call(opts, &out, "getReward", rewardId)
	return out, err
}

// GetExchange 获取兑换记录
func (r *RewardRegistryCaller) GetExchange(opts *bind.CallOpts, exchangeId *big.Int) (struct {
	Id           *big.Int
	RewardId     *big.Int
	Child        common.Address
	TokenAmount  *big.Int
	ExchangeDate *big.Int
	Fulfilled    bool
}, error) {
	var out struct {
		Id           *big.Int
		RewardId     *big.Int
		Child        common.Address
		TokenAmount  *big.Int
		ExchangeDate *big.Int
		Fulfilled    bool
	}
	err := r.contract.Call(opts, &out, "getExchange", exchangeId)
	return out, err
}

// GetFamilyRewardCount 获取家庭的奖品数量
func (r *RewardRegistryCaller) GetFamilyRewardCount(opts *bind.CallOpts, familyId *big.Int) (*big.Int, error) {
	var out []*big.Int
	err := r.contract.Call(opts, &out, "getFamilyRewardCount", familyId)
	if err != nil {
		return nil, err
	}
	return out[0], nil
}

// GetFamilyRewardId 获取家庭的奖品ID
func (r *RewardRegistryCaller) GetFamilyRewardId(opts *bind.CallOpts, familyId *big.Int, index *big.Int) (*big.Int, error) {
	var out []*big.Int
	err := r.contract.Call(opts, &out, "getFamilyRewardId", familyId, index)
	if err != nil {
		return nil, err
	}
	return out[0], nil
}

// GetChildExchangeCount 获取孩子的兑换记录数量
func (r *RewardRegistryCaller) GetChildExchangeCount(opts *bind.CallOpts, child common.Address) (*big.Int, error) {
	var out []*big.Int
	err := r.contract.Call(opts, &out, "getChildExchangeCount", child)
	if err != nil {
		return nil, err
	}
	return out[0], nil
}

// GetChildExchangeId 获取孩子的兑换记录ID
func (r *RewardRegistryCaller) GetChildExchangeId(opts *bind.CallOpts, child common.Address, index *big.Int) (*big.Int, error) {
	var out []*big.Int
	err := r.contract.Call(opts, &out, "getChildExchangeId", child, index)
	if err != nil {
		return nil, err
	}
	return out[0], nil
}
